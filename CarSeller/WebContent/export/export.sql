
  CREATE TABLE "CARSELLER"."MODELS" 
   (	"ID" NUMBER(9,0), 
	"MAKE" VARCHAR2(20), 
	"MODEL" VARCHAR2(20)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  ALTER TABLE "CARSELLER"."MODELS" ADD CONSTRAINT "MODELS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

  CREATE TABLE "CARSELLER"."CARS" 
   (	"ID" NUMBER(9,0), 
	"TITLE" VARCHAR2(100), 
	"RELEASE_YEAR" NUMBER(5,0), 
	"PROFILE_PHOTO" BLOB, 
	"PRICE" NUMBER(9,0), 
	"MODEL_ID" NUMBER(9,0), 
	"FUEL_TYPE" NUMBER(9,0), 
	"MILEAGE" NUMBER(9,0), 
	"BODY_TYPE_ID" NUMBER(9,0), 
	"DOORS_NUMBER" NUMBER(9,0), 
	"COLOR" NUMBER(9,0), 
	"ENGINE_CAPACITY" NUMBER(9,0), 
	"USER_ID" NUMBER(9,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("PROFILE_PHOTO") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
  ALTER TABLE "CARSELLER"."CARS" ADD CONSTRAINT "CARS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

  CREATE TABLE "CARSELLER"."USERS" 
   (	"ID" NUMBER(9,0), 
	"NAME" VARCHAR2(255), 
	"FORENAME" VARCHAR2(255), 
	"USERNAME" VARCHAR2(255), 
	"EMAIL" VARCHAR2(255), 
	"PASSWORD" VARCHAR2(255), 
	"PHONE_NUMBER" VARCHAR2(255)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  ALTER TABLE "CARSELLER"."USERS" ADD CONSTRAINT "USERS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

  CREATE TABLE "CARSELLER"."FEEDBACK" 
   (	"USER_ID" NUMBER(9,0), 
	"USER_FEEDBACK_ID" NUMBER(9,0), 
	"STARS" NUMBER(9,0), 
	"FEEDBACK" VARCHAR2(20), 
	"FEEDBACK_DATE" DATE, 
	"OFFENSIVE" NUMBER(9,0), 
	"REASON" VARCHAR2(20)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE TABLE "CARSELLER"."FAVOURITE" 
   (	"USER_ID" NUMBER(9,0), 
	"CAR_ID" NUMBER(9,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE TABLE "CARSELLER"."COMMENTS" 
   (	"CAR_ID" NUMBER(9,0), 
	"AUTHOR_ID" NUMBER(9,0), 
	"REMARKS" VARCHAR2(20), 
	"COMMENT_DATE" DATE, 
	"OFFENSIVE" NUMBER(9,0), 
	"REASON" VARCHAR2(500)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE TABLE "CARSELLER"."PREFERENCES" 
   (	"USER_ID" NUMBER(9,0), 
	"MODEL_ID" NUMBER(9,0), 
	"FUEL_TYPE" NUMBER(9,0), 
	"BODY_TYPE" NUMBER(9,0), 
	"MIN_PRICE" NUMBER(9,0), 
	"MAX_PRICE" NUMBER(9,0), 
	"ENGINE_CAPACITY_MIN" NUMBER(9,0), 
	"ENGINE_CAPACITY_MAX" NUMBER(9,0), 
	"MAX_YEAR" NUMBER(5,0), 
	"MIN_YEAR" NUMBER(5,0), 
	"MAX_MILAGE" NUMBER(9,0), 
	"MIN_MILAGE" NUMBER(9,0), 
	"COLOR" NUMBER(9,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE TABLE "CARSELLER"."HISTORY" 
   (	"USER_ID" NUMBER(9,0), 
	"CAR_ID" NUMBER(9,0), 
	"VIEWED_DATE" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE TABLE "CARSELLER"."TYPES" 
   (	"ID" NUMBER(9,0), 
	"BODY_TYPE" VARCHAR2(50)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  ALTER TABLE "CARSELLER"."TYPES" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

  CREATE TABLE "CARSELLER"."COLORS" 
   (	"ID" NUMBER(9,0), 
	"COLOR" VARCHAR2(50)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  ALTER TABLE "CARSELLER"."COLORS" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "CARSELLER"."COLORS" ADD UNIQUE ("COLOR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

  CREATE TABLE "CARSELLER"."FUEL" 
   (	"ID" NUMBER(9,0), 
	"FUEL_TYPE" VARCHAR2(50)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  ALTER TABLE "CARSELLER"."FUEL" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

  CREATE OR REPLACE FUNCTION "CARSELLER"."GET_KEY_WITH_MAX_VALUE" (p_array in suggestion.preferences) return number as
        v_key_max_value NUMBER := 0;
        v_current_max NUMBER := 0;
    begin
        for i in p_array.first .. p_array.last loop
            if (p_array.exists(i) and v_current_max < p_array(i)) then
                v_current_max := p_array(i);
                v_key_max_value := i;
            end if;
        end loop;
        
        return v_key_max_value;
    end get_key_with_max_value;
/

  CREATE TABLE "CARSELLER"."MANUFACTURERS" 
   (	"MAKE" VARCHAR2(20)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE PROCEDURE "CARSELLER"."GET_USER" 
        (p_id NUMBER, 
                  p_user OUT SYS_REFCURSOR, 
                  p_cars OUT SYS_REFCURSOR) AS
  --v_user SYS_REFCURSOR;
  --v_cars SYS_REFCURSOR;
BEGIN
  OPEN p_user FOR SELECT * FROM users WHERE id = p_id;
  OPEN p_cars FOR SELECT * FROM cars WHERE user_id = p_id;
END;
/

  CREATE OR REPLACE PROCEDURE "CARSELLER"."GET_BY_ID" (v_id NUMBER) AS
  v_user SYS_REFCURSOR;
  v_cars SYS_REFCURSOR;
  v_user_line users%ROWTYPE;
  v_car cars%ROWTYPE;
begin
  get_user(v_id, v_user, v_cars);
  
  loop
    fetch v_user into v_user_line;
    exit when v_user%notfound;
    dbms_output.put_line(v_user_line.username || ' ' || v_user_line.name);
  end loop;
  
  loop
    fetch v_cars into v_car;
    exit when v_cars%notfound;
    dbms_output.put_line(v_car.price || ' ' || v_car.user_id);
  end loop;
end get_by_id;
/

  CREATE OR REPLACE PROCEDURE "CARSELLER"."SAVE_TABLES_DATA" (p_file IN UTL_FILE.FILE_TYPE, p_table IN VARCHAR2) 
  AS
  v_cursor      INTEGER;
  v_ignore      INTEGER;  
  v_column_index      NUMBER(10, 0);
  v_i           NUMBER(10, 0);
  v_first_part  VARCHAR2(512);
  v_separator   VARCHAR2(5);
  v_value_part  VARCHAR2(1024);
  v_column_value VARCHAR2(8192);
  v_flush_time  INTEGER;
BEGIN
  v_first_part := 'INSERT INTO ' || p_table || ' (';
  v_separator := '';
  v_cursor := DBMS_SQL.OPEN_CURSOR;
  DBMS_SQL.PARSE(v_cursor, 
         'SELECT * FROM ' || p_table, 
          DBMS_SQL.NATIVE); 
  v_column_index := 1;   
  
  FOR v_column IN (SELECT column_name, data_type 
                   FROM user_tab_columns 
                   WHERE table_name = p_table
                   ORDER BY column_id) LOOP
    v_first_part := v_first_part || v_separator || v_column.column_name;
    DBMS_SQL.DEFINE_COLUMN(v_cursor, v_column_index, v_column_value, 4096);
    v_column_index := v_column_index + 1;
    v_separator := ', ';
  END LOOP;
  
  v_first_part := v_first_part || ') ';
  v_ignore := DBMS_SQL.EXECUTE(v_cursor);
  v_column_index := v_column_index - 1;
  v_flush_time := 1;
  
  LOOP 
    IF (DBMS_SQL.FETCH_ROWS(v_cursor) = 0) THEN
      EXIT;
    END IF;
    
    v_value_part := 'VALUES (';
    v_separator := '';
    FOR v_i IN 1 .. v_column_index LOOP
      DBMS_SQL.COLUMN_VALUE(v_cursor, v_i, v_column_value);
      v_value_part := v_value_part || 
                      v_separator || 
                      q'{'}' ||
                      REPLACE(v_column_value, q'{'}', q'{''}') || 
                      q'{'}';
      v_separator := ', ';
    END LOOP;
    
    IF (MOD(v_flush_time, 20) = 0) THEN
      UTL_FILE.FFLUSH(p_file);
      EXIT;
    END IF;
    
    v_flush_time := v_flush_time + 1;
    v_value_part := v_value_part || ');';
    UTL_FILE.PUT_LINE(p_file, v_first_part || v_value_part, false);
  END LOOP;
  DBMS_SQL.CLOSE_CURSOR(v_cursor);
END save_tables_data;
/

  CREATE OR REPLACE PROCEDURE "CARSELLER"."EXPORT_DB" as

  write_file UTL_FILE.FILE_TYPE;
  type objectType is table of number index by varchar2(50);
  v_types_to_save objectType;
begin
  /*
    Initialization
          +
    Setting witch types to safe in file
  */
  v_types_to_save('TABLE') := 1;
  v_types_to_save('FUNCTION') := 1;
  v_types_to_save('PROCEDURE') := 1;
  v_types_to_save('VIEW') := 1;
  --v_types_to_save('TRIGGER') := 1;
  write_file := UTL_FILE.FOPEN ('USER_DIR', 'export.sql', 'W');
  
  /*
    Setting output format
  */
  DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.session_transform,
                                    'CONSTRAINTS_AS_ALTER', true);
  DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.session_transform,
                                    'REF_CONSTRAINTS', false);
  DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.session_transform,
                                    'SQLTERMINATOR', TRUE);
                                    
  /*
    Looping through all owner objects 
                  +
    Saving DDL for this in file
  */
  FOR v_types IN (SELECT object_name, object_type FROM USER_OBJECTS) LOOP
    IF(v_types_to_save.exists(v_types.object_type)) THEN
      UTL_FILE.PUT_LINE(write_file, DBMS_METADATA.GET_DDL(v_types.object_type, v_types.object_name), false);
    END IF;
  END LOOP;
  UTL_FILE.FFLUSH(write_file);
  
  /*
    Adding constraints tables DDL to file 
  */
  FOR v_table IN (SELECT table_name FROM USER_TABLES) LOOP
    BEGIN
      UTL_FILE.PUT_LINE(write_file, dbms_metadata.get_dependent_ddl('REF_CONSTRAINT', v_table.table_name), FALSE);
    EXCEPTION
      WHEN OTHERS THEN
        IF(SQLCODE <> -31608) THEN
          raise_application_error(-20000, sqlerrm);
        END IF;
    END;
  END LOOP;
  UTL_FILE.FFLUSH(write_file);
  
  FOR v_table IN (SELECT table_name FROM USER_TABLES) LOOP
    dbms_output.put_line('current line: ' || v_table.table_name);
    save_tables_data(write_file, v_table.table_name);
  END LOOP;
  
  UTL_FILE.FCLOSE(write_file);
end;
/

  ALTER TABLE "CARSELLER"."CARS" ADD CONSTRAINT "CARS_FK0" FOREIGN KEY ("MODEL_ID")
	  REFERENCES "CARSELLER"."MODELS" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."CARS" ADD CONSTRAINT "CARS_FK1" FOREIGN KEY ("USER_ID")
	  REFERENCES "CARSELLER"."USERS" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."CARS" ADD CONSTRAINT "CARS_FK2" FOREIGN KEY ("BODY_TYPE_ID")
	  REFERENCES "CARSELLER"."TYPES" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."CARS" ADD CONSTRAINT "CARS_FK3" FOREIGN KEY ("COLOR")
	  REFERENCES "CARSELLER"."COLORS" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."CARS" ADD CONSTRAINT "CARS_FK4" FOREIGN KEY ("FUEL_TYPE")
	  REFERENCES "CARSELLER"."FUEL" ("ID") ENABLE;

  ALTER TABLE "CARSELLER"."FEEDBACK" ADD CONSTRAINT "FEEDBACK_FK0" FOREIGN KEY ("USER_ID")
	  REFERENCES "CARSELLER"."USERS" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."FEEDBACK" ADD CONSTRAINT "FEEDBACK_FK1" FOREIGN KEY ("USER_FEEDBACK_ID")
	  REFERENCES "CARSELLER"."USERS" ("ID") ENABLE;

  ALTER TABLE "CARSELLER"."FAVOURITE" ADD CONSTRAINT "FAVOURITE_FK0" FOREIGN KEY ("USER_ID")
	  REFERENCES "CARSELLER"."USERS" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."FAVOURITE" ADD CONSTRAINT "FAVOURITE_FK1" FOREIGN KEY ("CAR_ID")
	  REFERENCES "CARSELLER"."CARS" ("ID") ENABLE;

  ALTER TABLE "CARSELLER"."COMMENTS" ADD CONSTRAINT "COMMENTS_FK0" FOREIGN KEY ("CAR_ID")
	  REFERENCES "CARSELLER"."CARS" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."COMMENTS" ADD CONSTRAINT "COMMENTS_FK1" FOREIGN KEY ("AUTHOR_ID")
	  REFERENCES "CARSELLER"."USERS" ("ID") ENABLE;

  ALTER TABLE "CARSELLER"."PREFERENCES" ADD CONSTRAINT "PREFERENCES_FK0" FOREIGN KEY ("USER_ID")
	  REFERENCES "CARSELLER"."USERS" ("ID") ENABLE;
  ALTER TABLE "CARSELLER"."PREFERENCES" ADD CONSTRAINT "PREFERENCES_FK1" FOREIGN KEY ("MODEL_ID")
	  REFERENCES "CARSELLER"."MODELS" ("ID") ENABLE;

  ALTER TABLE "CARSELLER"."HISTORY" ADD CONSTRAINT "CAR_FK" FOREIGN KEY ("CAR_ID")
	  REFERENCES "CARSELLER"."CARS" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "CARSELLER"."HISTORY" ADD CONSTRAINT "USER_FK" FOREIGN KEY ("USER_ID")
	  REFERENCES "CARSELLER"."USERS" ("ID") ON DELETE CASCADE ENABLE;
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1185', 'Chevrolet', 'Suburban 1500');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1186', 'Chevrolet', 'Suburban 2500');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1187', 'Chrysler', 'Fifth Ave');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1188', 'Chrysler', 'Imperial');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1189', 'Chrysler', 'LeBaron');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1190', 'Chrysler', 'New Yorker');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1191', 'Chrysler', 'Town  Country');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1192', 'Daihatsu', 'Charade');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1193', 'Daihatsu', 'Rocky');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1194', 'Geo', 'Metro');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1195', 'Geo', 'Prizm');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1196', 'Geo', 'Storm');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1197', 'Geo', 'Tracker');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1198', 'GMC', '1500');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1199', 'GMC', '2500');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1200', 'GMC', '3500');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1201', 'GMC', '1500 Club Coupe');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1202', 'GMC', '2500 Club Coupe');
INSERT INTO MODELS (ID, MAKE, MODEL) VALUES ('1203', 'GMC', '3500 Club Coupe');
